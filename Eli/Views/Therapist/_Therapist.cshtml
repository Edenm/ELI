@model Eli.Models.tblTherapist

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@{string id;
  string submit;
if (@Model.ID == null)
{
    id = "new";
    submit = "צור";
}
else
{
    id = @Model.ID;
    submit = "שמור";
}
}


<!-- Modal -->
<div class="modal fade" id="@id" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 align="right " class="modal-title" id="myModalLabel"></h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <fieldset>
                        <h2> מטפל חדש</h2>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ID)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ID)
                            @Html.ValidationMessageFor(model => model.ID)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.TherapistFirstName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TherapistFirstName)
                            @Html.ValidationMessageFor(model => model.TherapistFirstName)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.TherapistSurName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TherapistSurName)
                            @Html.ValidationMessageFor(model => model.TherapistSurName)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.BirthDate)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.BirthDate)
                            @Html.ValidationMessageFor(model => model.BirthDate)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Gender)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Gender)
                            @Html.ValidationMessageFor(model => model.Gender)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Address)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Address)
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ContcatPhoneNumber)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ContcatPhoneNumber)
                            @Html.ValidationMessageFor(model => model.ContcatPhoneNumber)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ContactMail)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ContactMail)
                            @Html.ValidationMessageFor(model => model.ContactMail)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.UserName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.UserName)
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Passcode)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Passcode)
                            @Html.ValidationMessageFor(model => model.Passcode)
                        </div>

                        <p>
                            <input type="submit" name="submit" value="@submit" />
                        </p>
                    </fieldset>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>