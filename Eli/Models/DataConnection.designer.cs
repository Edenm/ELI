#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eli.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ELI")]
	public partial class DataConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblBrotherSister(tblBrotherSister instance);
    partial void UpdatetblBrotherSister(tblBrotherSister instance);
    partial void DeletetblBrotherSister(tblBrotherSister instance);
    partial void InserttblBrotherSisterPatient(tblBrotherSisterPatient instance);
    partial void UpdatetblBrotherSisterPatient(tblBrotherSisterPatient instance);
    partial void DeletetblBrotherSisterPatient(tblBrotherSisterPatient instance);
    partial void InserttblEvent(tblEvent instance);
    partial void UpdatetblEvent(tblEvent instance);
    partial void DeletetblEvent(tblEvent instance);
    partial void InserttblFinancingFactor(tblFinancingFactor instance);
    partial void UpdatetblFinancingFactor(tblFinancingFactor instance);
    partial void DeletetblFinancingFactor(tblFinancingFactor instance);
    partial void InserttblParent(tblParent instance);
    partial void UpdatetblParent(tblParent instance);
    partial void DeletetblParent(tblParent instance);
    partial void InserttblParentPatient(tblParentPatient instance);
    partial void UpdatetblParentPatient(tblParentPatient instance);
    partial void DeletetblParentPatient(tblParentPatient instance);
    partial void InserttblPatient(tblPatient instance);
    partial void UpdatetblPatient(tblPatient instance);
    partial void DeletetblPatient(tblPatient instance);
    partial void InserttblReference(tblReference instance);
    partial void UpdatetblReference(tblReference instance);
    partial void DeletetblReference(tblReference instance);
    partial void InserttblReferenceTherapist(tblReferenceTherapist instance);
    partial void UpdatetblReferenceTherapist(tblReferenceTherapist instance);
    partial void DeletetblReferenceTherapist(tblReferenceTherapist instance);
    partial void InserttblRefererencePatient(tblRefererencePatient instance);
    partial void UpdatetblRefererencePatient(tblRefererencePatient instance);
    partial void DeletetblRefererencePatient(tblRefererencePatient instance);
    partial void InserttblTherapist(tblTherapist instance);
    partial void UpdatetblTherapist(tblTherapist instance);
    partial void DeletetblTherapist(tblTherapist instance);
    partial void InserttblTreatment(tblTreatment instance);
    partial void UpdatetblTreatment(tblTreatment instance);
    partial void DeletetblTreatment(tblTreatment instance);
    #endregion
		
		public DataConnectionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ELIConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblBrotherSister> tblBrotherSisters
		{
			get
			{
				return this.GetTable<tblBrotherSister>();
			}
		}
		
		public System.Data.Linq.Table<tblBrotherSisterPatient> tblBrotherSisterPatients
		{
			get
			{
				return this.GetTable<tblBrotherSisterPatient>();
			}
		}
		
		public System.Data.Linq.Table<tblEvent> tblEvents
		{
			get
			{
				return this.GetTable<tblEvent>();
			}
		}
		
		public System.Data.Linq.Table<tblFinancingFactor> tblFinancingFactors
		{
			get
			{
				return this.GetTable<tblFinancingFactor>();
			}
		}
		
		public System.Data.Linq.Table<tblParent> tblParents
		{
			get
			{
				return this.GetTable<tblParent>();
			}
		}
		
		public System.Data.Linq.Table<tblParentPatient> tblParentPatients
		{
			get
			{
				return this.GetTable<tblParentPatient>();
			}
		}
		
		public System.Data.Linq.Table<tblPatient> tblPatients
		{
			get
			{
				return this.GetTable<tblPatient>();
			}
		}
		
		public System.Data.Linq.Table<tblReference> tblReferences
		{
			get
			{
				return this.GetTable<tblReference>();
			}
		}
		
		public System.Data.Linq.Table<tblReferenceTherapist> tblReferenceTherapists
		{
			get
			{
				return this.GetTable<tblReferenceTherapist>();
			}
		}
		
		public System.Data.Linq.Table<tblRefererencePatient> tblRefererencePatients
		{
			get
			{
				return this.GetTable<tblRefererencePatient>();
			}
		}
		
		public System.Data.Linq.Table<tblTherapist> tblTherapists
		{
			get
			{
				return this.GetTable<tblTherapist>();
			}
		}
		
		public System.Data.Linq.Table<tblTreatment> tblTreatments
		{
			get
			{
				return this.GetTable<tblTreatment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBrotherSister")]
	public partial class tblBrotherSister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BrotherSisterID;
		
		private string _BrotherSisterFirstName;
		
		private string _BrotherSisterSurName;
		
		private System.Nullable<System.DateTime> _BrotherSisterBirthDate;
		
		private string _BrotherSisterGender;
		
		private string _BrotherSisterStudyFramework;
		
		private EntitySet<tblBrotherSisterPatient> _tblBrotherSisterPatients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrotherSisterIDChanging(string value);
    partial void OnBrotherSisterIDChanged();
    partial void OnBrotherSisterFirstNameChanging(string value);
    partial void OnBrotherSisterFirstNameChanged();
    partial void OnBrotherSisterSurNameChanging(string value);
    partial void OnBrotherSisterSurNameChanged();
    partial void OnBrotherSisterBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBrotherSisterBirthDateChanged();
    partial void OnBrotherSisterGenderChanging(string value);
    partial void OnBrotherSisterGenderChanged();
    partial void OnBrotherSisterStudyFrameworkChanging(string value);
    partial void OnBrotherSisterStudyFrameworkChanged();
    #endregion
		
		public tblBrotherSister()
		{
			this._tblBrotherSisterPatients = new EntitySet<tblBrotherSisterPatient>(new Action<tblBrotherSisterPatient>(this.attach_tblBrotherSisterPatients), new Action<tblBrotherSisterPatient>(this.detach_tblBrotherSisterPatients));
			OnCreated();
		}

        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrotherSisterID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BrotherSisterID
		{
			get
			{
				return this._BrotherSisterID;
			}
			set
			{
				if ((this._BrotherSisterID != value))
				{
					this.OnBrotherSisterIDChanging(value);
					this.SendPropertyChanging();
					this._BrotherSisterID = value;
					this.SendPropertyChanged("BrotherSisterID");
					this.OnBrotherSisterIDChanged();
				}
			}
		}

        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  פרטי אינו יכול להכיל מספרים")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrotherSisterFirstName", DbType="VarChar(20)")]
		public string BrotherSisterFirstName
		{
			get
			{
				return this._BrotherSisterFirstName;
			}
			set
			{
				if ((this._BrotherSisterFirstName != value))
				{
					this.OnBrotherSisterFirstNameChanging(value);
					this.SendPropertyChanging();
					this._BrotherSisterFirstName = value;
					this.SendPropertyChanged("BrotherSisterFirstName");
					this.OnBrotherSisterFirstNameChanged();
				}
			}
		}


        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  משפחה אינו יכול להכיל מספרים")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrotherSisterSurName", DbType="VarChar(20)")]
		public string BrotherSisterSurName
		{
			get
			{
				return this._BrotherSisterSurName;
			}
			set
			{
				if ((this._BrotherSisterSurName != value))
				{
					this.OnBrotherSisterSurNameChanging(value);
					this.SendPropertyChanging();
					this._BrotherSisterSurName = value;
					this.SendPropertyChanged("BrotherSisterSurName");
					this.OnBrotherSisterSurNameChanged();
				}
			}
		}



        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrotherSisterBirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BrotherSisterBirthDate
		{
			get
			{
				return this._BrotherSisterBirthDate;
			}
			set
			{
				if ((this._BrotherSisterBirthDate != value))
				{
					this.OnBrotherSisterBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BrotherSisterBirthDate = value;
					this.SendPropertyChanged("BrotherSisterBirthDate");
					this.OnBrotherSisterBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrotherSisterGender", DbType="VarChar(6)")]
		public string BrotherSisterGender
		{
			get
			{
				return this._BrotherSisterGender;
			}
			set
			{
				if ((this._BrotherSisterGender != value))
				{
					this.OnBrotherSisterGenderChanging(value);
					this.SendPropertyChanging();
					this._BrotherSisterGender = value;
					this.SendPropertyChanged("BrotherSisterGender");
					this.OnBrotherSisterGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrotherSisterStudyFramework", DbType="VarChar(MAX)")]
		public string BrotherSisterStudyFramework
		{
			get
			{
				return this._BrotherSisterStudyFramework;
			}
			set
			{
				if ((this._BrotherSisterStudyFramework != value))
				{
					this.OnBrotherSisterStudyFrameworkChanging(value);
					this.SendPropertyChanging();
					this._BrotherSisterStudyFramework = value;
					this.SendPropertyChanged("BrotherSisterStudyFramework");
					this.OnBrotherSisterStudyFrameworkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBrotherSister_tblBrotherSisterPatient", Storage="_tblBrotherSisterPatients", ThisKey="BrotherSisterID", OtherKey="BrotherSisterID")]
		public EntitySet<tblBrotherSisterPatient> tblBrotherSisterPatients
		{
			get
			{
				return this._tblBrotherSisterPatients;
			}
			set
			{
				this._tblBrotherSisterPatients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBrotherSisterPatients(tblBrotherSisterPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblBrotherSister = this;
		}
		
		private void detach_tblBrotherSisterPatients(tblBrotherSisterPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblBrotherSister = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBrotherSisterPatient")]
	public partial class tblBrotherSisterPatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PatientID;
		
		private string _BrotherSisterID;
		
		private EntityRef<tblBrotherSister> _tblBrotherSister;
		
		private EntityRef<tblPatient> _tblPatient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(string value);
    partial void OnPatientIDChanged();
    partial void OnBrotherSisterIDChanging(string value);
    partial void OnBrotherSisterIDChanged();
    #endregion
		
		public tblBrotherSisterPatient()
		{
			this._tblBrotherSister = default(EntityRef<tblBrotherSister>);
			this._tblPatient = default(EntityRef<tblPatient>);
			OnCreated();
		}


        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]

        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._tblPatient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrotherSisterID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BrotherSisterID
		{
			get
			{
				return this._BrotherSisterID;
			}
			set
			{
				if ((this._BrotherSisterID != value))
				{
					if (this._tblBrotherSister.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrotherSisterIDChanging(value);
					this.SendPropertyChanging();
					this._BrotherSisterID = value;
					this.SendPropertyChanged("BrotherSisterID");
					this.OnBrotherSisterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBrotherSister_tblBrotherSisterPatient", Storage="_tblBrotherSister", ThisKey="BrotherSisterID", OtherKey="BrotherSisterID", IsForeignKey=true)]
		public tblBrotherSister tblBrotherSister
		{
			get
			{
				return this._tblBrotherSister.Entity;
			}
			set
			{
				tblBrotherSister previousValue = this._tblBrotherSister.Entity;
				if (((previousValue != value) 
							|| (this._tblBrotherSister.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBrotherSister.Entity = null;
						previousValue.tblBrotherSisterPatients.Remove(this);
					}
					this._tblBrotherSister.Entity = value;
					if ((value != null))
					{
						value.tblBrotherSisterPatients.Add(this);
						this._BrotherSisterID = value.BrotherSisterID;
					}
					else
					{
						this._BrotherSisterID = default(string);
					}
					this.SendPropertyChanged("tblBrotherSister");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatient_tblBrotherSisterPatient", Storage="_tblPatient", ThisKey="PatientID", OtherKey="ID", IsForeignKey=true)]
		public tblPatient tblPatient
		{
			get
			{
				return this._tblPatient.Entity;
			}
			set
			{
				tblPatient previousValue = this._tblPatient.Entity;
				if (((previousValue != value) 
							|| (this._tblPatient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPatient.Entity = null;
						previousValue.tblBrotherSisterPatients.Remove(this);
					}
					this._tblPatient.Entity = value;
					if ((value != null))
					{
						value.tblBrotherSisterPatients.Add(this);
						this._PatientID = value.ID;
					}
					else
					{
						this._PatientID = default(string);
					}
					this.SendPropertyChanged("tblPatient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEvent")]
	public partial class tblEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventNum;
		
		private System.Nullable<System.DateTime> _EventDate;
		
		private System.Nullable<System.TimeSpan> _EventTime;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventNumChanging(int value);
    partial void OnEventNumChanged();
    partial void OnEventDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEventDateChanged();
    partial void OnEventTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEventTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EventNum
		{
			get
			{
				return this._EventNum;
			}
			set
			{
				if ((this._EventNum != value))
				{
					this.OnEventNumChanging(value);
					this.SendPropertyChanging();
					this._EventNum = value;
					this.SendPropertyChanged("EventNum");
					this.OnEventNumChanged();
				}
			}
		}


        [Required(ErrorMessage = "שדה חובה")]

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="Date")]
		public System.Nullable<System.DateTime> EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}

        [Required(ErrorMessage = "שדה חובה")]
        [DataType(DataType.Time)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}


                        [Required(ErrorMessage = "שדה חובה")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFinancingFactor")]
	public partial class tblFinancingFactor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FinancingFactorNumber;
		
		private string _FinancingFactorName;
		
		private string _FinancingFactorType;
		
		private string _FinancingFactorAddress;
		
		private string _FinancingFactorContactName;
		
		private string _FinancingFactorContcatPhoneNumber;
		
		private string _FinancingFactorContactMail;
		
		private EntitySet<tblTreatment> _tblTreatments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFinancingFactorNumberChanging(int value);
    partial void OnFinancingFactorNumberChanged();
    partial void OnFinancingFactorNameChanging(string value);
    partial void OnFinancingFactorNameChanged();
    partial void OnFinancingFactorTypeChanging(string value);
    partial void OnFinancingFactorTypeChanged();
    partial void OnFinancingFactorAddressChanging(string value);
    partial void OnFinancingFactorAddressChanged();
    partial void OnFinancingFactorContactNameChanging(string value);
    partial void OnFinancingFactorContactNameChanged();
    partial void OnFinancingFactorContcatPhoneNumberChanging(string value);
    partial void OnFinancingFactorContcatPhoneNumberChanged();
    partial void OnFinancingFactorContactMailChanging(string value);
    partial void OnFinancingFactorContactMailChanged();
    #endregion
		
		public tblFinancingFactor()
		{
			this._tblTreatments = new EntitySet<tblTreatment>(new Action<tblTreatment>(this.attach_tblTreatments), new Action<tblTreatment>(this.detach_tblTreatments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FinancingFactorNumber
		{
			get
			{
				return this._FinancingFactorNumber;
			}
			set
			{
				if ((this._FinancingFactorNumber != value))
				{
					this.OnFinancingFactorNumberChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorNumber = value;
					this.SendPropertyChanged("FinancingFactorNumber");
					this.OnFinancingFactorNumberChanged();
				}
			}
		}

        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,50}$", ErrorMessage = "שם  גורם מממן אינו יכול להכיל מספרים")]

	
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorName", DbType="varchar(MAX)")]
		public string FinancingFactorName
		{
			get
			{
				return this._FinancingFactorName;
			}
			set
			{
				if ((this._FinancingFactorName != value))
				{
					this.OnFinancingFactorNameChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorName = value;
					this.SendPropertyChanged("FinancingFactorName");
					this.OnFinancingFactorNameChanged();
				}
			}
		}
                        [Required(ErrorMessage = "שדה חובה")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorType", DbType="VarChar(15)")]
		public string FinancingFactorType
		{
			get
			{
				return this._FinancingFactorType;
			}
			set
			{
				if ((this._FinancingFactorType != value))
				{
					this.OnFinancingFactorTypeChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorType = value;
					this.SendPropertyChanged("FinancingFactorType");
					this.OnFinancingFactorTypeChanged();
				}
			}
		}


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorAddress", DbType="VarChar(MAX)")]
		public string FinancingFactorAddress
		{
			get
			{
				return this._FinancingFactorAddress;
			}
			set
			{
				if ((this._FinancingFactorAddress != value))
				{
					this.OnFinancingFactorAddressChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorAddress = value;
					this.SendPropertyChanged("FinancingFactorAddress");
					this.OnFinancingFactorAddressChanged();
				}
			}
		}


                        [RegularExpression(@"[^0-9]{0,50}$", ErrorMessage = "שם  איש קשר אינו יכול להכיל מספרים")]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorContactName", DbType="VarChar(20)")]
		public string FinancingFactorContactName
		{
			get
			{
				return this._FinancingFactorContactName;
			}
			set
			{
				if ((this._FinancingFactorContactName != value))
				{
					this.OnFinancingFactorContactNameChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorContactName = value;
					this.SendPropertyChanged("FinancingFactorContactName");
					this.OnFinancingFactorContactNameChanged();
				}
			}
		}


                        [RegularExpression(@"^0[0-9]{0,15}$", ErrorMessage = "טלפון לא חוקי")]

                        [StringLength(10, ErrorMessage = "מספר פלא חייב להכיל 10 ספרות", MinimumLength = 10)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorContcatPhoneNumber", DbType="Char(10)")]
		public string FinancingFactorContcatPhoneNumber
		{
			get
			{
				return this._FinancingFactorContcatPhoneNumber;
			}
			set
			{
				if ((this._FinancingFactorContcatPhoneNumber != value))
				{
					this.OnFinancingFactorContcatPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorContcatPhoneNumber = value;
					this.SendPropertyChanged("FinancingFactorContcatPhoneNumber");
					this.OnFinancingFactorContcatPhoneNumberChanged();
				}
			}
		}
                        [RegularExpression(".+@.+\\..+", ErrorMessage = "אנא הכנס כתובת מייל תקינה")]
	

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorContactMail", DbType="VarChar(30)")]
		public string FinancingFactorContactMail
		{
			get
			{
				return this._FinancingFactorContactMail;
			}
			set
			{
				if ((this._FinancingFactorContactMail != value))
				{
					this.OnFinancingFactorContactMailChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorContactMail = value;
					this.SendPropertyChanged("FinancingFactorContactMail");
					this.OnFinancingFactorContactMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFinancingFactor_tblTreatment", Storage="_tblTreatments", ThisKey="FinancingFactorNumber", OtherKey="FinancingFactorNumber")]
		public EntitySet<tblTreatment> tblTreatments
		{
			get
			{
				return this._tblTreatments;
			}
			set
			{
				this._tblTreatments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTreatments(tblTreatment entity)
		{
			this.SendPropertyChanging();
			entity.tblFinancingFactor = this;
		}
		
		private void detach_tblTreatments(tblTreatment entity)
		{
			this.SendPropertyChanging();
			entity.tblFinancingFactor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblParent")]
	public partial class tblParent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ParentID;
		
		private string _ParentFirstName;
		
		private string _ParentSurName;
		
		private System.Nullable<System.DateTime> _ParentBirthDate;
		
		private string _ParentGender;
		
		private string _ParentAddress;
		
		private string _ParentPhoneNumber;
		
		private string _ParentMail;
		
		private string _IsWorking;
		
		private string _Explain;
		
		private string _Comment;
		
		private EntitySet<tblParentPatient> _tblParentPatients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentIDChanging(string value);
    partial void OnParentIDChanged();
    partial void OnParentFirstNameChanging(string value);
    partial void OnParentFirstNameChanged();
    partial void OnParentSurNameChanging(string value);
    partial void OnParentSurNameChanged();
    partial void OnParentBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnParentBirthDateChanged();
    partial void OnParentGenderChanging(string value);
    partial void OnParentGenderChanged();
    partial void OnParentAddressChanging(string value);
    partial void OnParentAddressChanged();
    partial void OnParentPhoneNumberChanging(string value);
    partial void OnParentPhoneNumberChanged();
    partial void OnParentMailChanging(string value);
    partial void OnParentMailChanged();
    partial void OnIsWorkingChanging(string value);
    partial void OnIsWorkingChanged();
    partial void OnExplainChanging(string value);
    partial void OnExplainChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tblParent()
		{
			this._tblParentPatients = new EntitySet<tblParentPatient>(new Action<tblParentPatient>(this.attach_tblParentPatients), new Action<tblParentPatient>(this.detach_tblParentPatients));
			OnCreated();
		}

        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}


        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  פרטי אינו יכול להכיל מספרים")]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentFirstName", DbType="VarChar(20)")]
		public string ParentFirstName
		{
			get
			{
				return this._ParentFirstName;
			}
			set
			{
				if ((this._ParentFirstName != value))
				{
					this.OnParentFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ParentFirstName = value;
					this.SendPropertyChanged("ParentFirstName");
					this.OnParentFirstNameChanged();
				}
			}
		}


        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  משפחה אינו יכול להכיל מספרים")]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSurName", DbType="VarChar(20)")]
		public string ParentSurName
		{
			get
			{
				return this._ParentSurName;
			}
			set
			{
				if ((this._ParentSurName != value))
				{
					this.OnParentSurNameChanging(value);
					this.SendPropertyChanging();
					this._ParentSurName = value;
					this.SendPropertyChanged("ParentSurName");
					this.OnParentSurNameChanged();
				}
			}
		}



        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentBirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> ParentBirthDate
		{
			get
			{
				return this._ParentBirthDate;
			}
			set
			{
				if ((this._ParentBirthDate != value))
				{
					this.OnParentBirthDateChanging(value);
					this.SendPropertyChanging();
					this._ParentBirthDate = value;
					this.SendPropertyChanged("ParentBirthDate");
					this.OnParentBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentGender", DbType="VarChar(6)")]
		public string ParentGender
		{
			get
			{
				return this._ParentGender;
			}
			set
			{
				if ((this._ParentGender != value))
				{
					this.OnParentGenderChanging(value);
					this.SendPropertyChanging();
					this._ParentGender = value;
					this.SendPropertyChanged("ParentGender");
					this.OnParentGenderChanged();
				}
			}
		}


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentAddress", DbType="VarChar(MAX)")]
		public string ParentAddress
		{
			get
			{
				return this._ParentAddress;
			}
			set
			{
				if ((this._ParentAddress != value))
				{
					this.OnParentAddressChanging(value);
					this.SendPropertyChanging();
					this._ParentAddress = value;
					this.SendPropertyChanged("ParentAddress");
					this.OnParentAddressChanged();
				}
			}
		}


                        [RegularExpression(@"^0[0-9]{0,15}$", ErrorMessage = "טלפון לא חוקי")]

                        [StringLength(10, ErrorMessage = "מספר פלא חייב להכיל 10 ספרות", MinimumLength = 10)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPhoneNumber", DbType="Char(10)")]
		public string ParentPhoneNumber
		{
			get
			{
				return this._ParentPhoneNumber;
			}
			set
			{
				if ((this._ParentPhoneNumber != value))
				{
					this.OnParentPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._ParentPhoneNumber = value;
					this.SendPropertyChanged("ParentPhoneNumber");
					this.OnParentPhoneNumberChanged();
				}
			}
		}


                        [RegularExpression(".+@.+\\..+", ErrorMessage = "אנא הכנס כתובת מייל תקינה")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMail", DbType="VarChar(30)")]
		public string ParentMail
		{
			get
			{
				return this._ParentMail;
			}
			set
			{
				if ((this._ParentMail != value))
				{
					this.OnParentMailChanging(value);
					this.SendPropertyChanging();
					this._ParentMail = value;
					this.SendPropertyChanged("ParentMail");
					this.OnParentMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWorking", DbType="VarChar(2)")]
		public string IsWorking
		{
			get
			{
				return this._IsWorking;
			}
			set
			{
				if ((this._IsWorking != value))
				{
					this.OnIsWorkingChanging(value);
					this.SendPropertyChanging();
					this._IsWorking = value;
					this.SendPropertyChanged("IsWorking");
					this.OnIsWorkingChanged();
				}
			}
		}


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explain", DbType="VarChar(MAX)")]
		public string Explain
		{
			get
			{
				return this._Explain;
			}
			set
			{
				if ((this._Explain != value))
				{
					this.OnExplainChanging(value);
					this.SendPropertyChanging();
					this._Explain = value;
					this.SendPropertyChanged("Explain");
					this.OnExplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblParent_tblParentPatient", Storage="_tblParentPatients", ThisKey="ParentID", OtherKey="ParentID")]
		public EntitySet<tblParentPatient> tblParentPatients
		{
			get
			{
				return this._tblParentPatients;
			}
			set
			{
				this._tblParentPatients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblParentPatients(tblParentPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblParent = this;
		}
		
		private void detach_tblParentPatients(tblParentPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblParent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblParentPatient")]
	public partial class tblParentPatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PatientID;
		
		private string _ParentID;
		
		private EntityRef<tblParent> _tblParent;
		
		private EntityRef<tblPatient> _tblPatient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(string value);
    partial void OnPatientIDChanged();
    partial void OnParentIDChanging(string value);
    partial void OnParentIDChanged();
    #endregion
		
		public tblParentPatient()
		{
			this._tblParent = default(EntityRef<tblParent>);
			this._tblPatient = default(EntityRef<tblPatient>);
			OnCreated();
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._tblPatient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._tblParent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblParent_tblParentPatient", Storage="_tblParent", ThisKey="ParentID", OtherKey="ParentID", IsForeignKey=true)]
		public tblParent tblParent
		{
			get
			{
				return this._tblParent.Entity;
			}
			set
			{
				tblParent previousValue = this._tblParent.Entity;
				if (((previousValue != value) 
							|| (this._tblParent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblParent.Entity = null;
						previousValue.tblParentPatients.Remove(this);
					}
					this._tblParent.Entity = value;
					if ((value != null))
					{
						value.tblParentPatients.Add(this);
						this._ParentID = value.ParentID;
					}
					else
					{
						this._ParentID = default(string);
					}
					this.SendPropertyChanged("tblParent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatient_tblParentPatient", Storage="_tblPatient", ThisKey="PatientID", OtherKey="ID", IsForeignKey=true)]
		public tblPatient tblPatient
		{
			get
			{
				return this._tblPatient.Entity;
			}
			set
			{
				tblPatient previousValue = this._tblPatient.Entity;
				if (((previousValue != value) 
							|| (this._tblPatient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPatient.Entity = null;
						previousValue.tblParentPatients.Remove(this);
					}
					this._tblPatient.Entity = value;
					if ((value != null))
					{
						value.tblParentPatients.Add(this);
						this._PatientID = value.ID;
					}
					else
					{
						this._PatientID = default(string);
					}
					this.SendPropertyChanged("tblPatient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPatient")]
	public partial class tblPatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _FirstName;
		
		private string _SurName;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Gender;
		
		private string _EducationalFramework;
		
		private string _PatientAddress;
		
		private string _PhoneNumber;
		
		private string _PatientStatus;
		
		private string _ContactName1;
		
		private string _ContactProfession1;
		
		private string _ContactMail1;
		
		private string _ContactPhone1;
		
		private string _ContactName2;
		
		private string _ContactProfession2;
		
		private string _ContactMail2;
		
		private string _ContactPhone2;
		
		private string _ContactName3;
		
		private string _ContactProfession3;
		
		private string _ContactMail3;
		
		private string _ContactPhone3;
		
		private EntitySet<tblBrotherSisterPatient> _tblBrotherSisterPatients;
		
		private EntitySet<tblParentPatient> _tblParentPatients;
		
		private EntitySet<tblRefererencePatient> _tblRefererencePatients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnEducationalFrameworkChanging(string value);
    partial void OnEducationalFrameworkChanged();
    partial void OnPatientAddressChanging(string value);
    partial void OnPatientAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPatientStatusChanging(string value);
    partial void OnPatientStatusChanged();
    partial void OnContactName1Changing(string value);
    partial void OnContactName1Changed();
    partial void OnContactProfession1Changing(string value);
    partial void OnContactProfession1Changed();
    partial void OnContactMail1Changing(string value);
    partial void OnContactMail1Changed();
    partial void OnContactPhone1Changing(string value);
    partial void OnContactPhone1Changed();
    partial void OnContactName2Changing(string value);
    partial void OnContactName2Changed();
    partial void OnContactProfession2Changing(string value);
    partial void OnContactProfession2Changed();
    partial void OnContactMail2Changing(string value);
    partial void OnContactMail2Changed();
    partial void OnContactPhone2Changing(string value);
    partial void OnContactPhone2Changed();
    partial void OnContactName3Changing(string value);
    partial void OnContactName3Changed();
    partial void OnContactProfession3Changing(string value);
    partial void OnContactProfession3Changed();
    partial void OnContactMail3Changing(string value);
    partial void OnContactMail3Changed();
    partial void OnContactPhone3Changing(string value);
    partial void OnContactPhone3Changed();
    #endregion
		
		public tblPatient()
		{
			this._tblBrotherSisterPatients = new EntitySet<tblBrotherSisterPatient>(new Action<tblBrotherSisterPatient>(this.attach_tblBrotherSisterPatients), new Action<tblBrotherSisterPatient>(this.detach_tblBrotherSisterPatients));
			this._tblParentPatients = new EntitySet<tblParentPatient>(new Action<tblParentPatient>(this.attach_tblParentPatients), new Action<tblParentPatient>(this.detach_tblParentPatients));
			this._tblRefererencePatients = new EntitySet<tblRefererencePatient>(new Action<tblRefererencePatient>(this.attach_tblRefererencePatients), new Action<tblRefererencePatient>(this.detach_tblRefererencePatients));
			OnCreated();
		}


        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  פרטי אינו יכול להכיל מספרים")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  משפחה אינו יכול להכיל מספרים")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="VarChar(20)")]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}

        [Required(ErrorMessage = "שדה חובה")]

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(6)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}

                        [Required(ErrorMessage = "שדה חובה")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalFramework", DbType="VarChar(MAX)")]
		public string EducationalFramework
		{
			get
			{
				return this._EducationalFramework;
			}
			set
			{
				if ((this._EducationalFramework != value))
				{
					this.OnEducationalFrameworkChanging(value);
					this.SendPropertyChanging();
					this._EducationalFramework = value;
					this.SendPropertyChanged("EducationalFramework");
					this.OnEducationalFrameworkChanged();
				}
			}
		}


        [Required(ErrorMessage = "שדה חובה")]
	
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAddress", DbType="VarChar(MAX)")]
		public string PatientAddress
		{
			get
			{
				return this._PatientAddress;
			}
			set
			{
				if ((this._PatientAddress != value))
				{
					this.OnPatientAddressChanging(value);
					this.SendPropertyChanging();
					this._PatientAddress = value;
					this.SendPropertyChanged("PatientAddress");
					this.OnPatientAddressChanged();
				}
			}
		}


        [RegularExpression(@"^0[0-9]{0,15}$", ErrorMessage = "טלפון לא חוקי")]

        [StringLength(10, ErrorMessage = "מספר פלא חייב להכיל 10 ספרות", MinimumLength = 10)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}


                        [Required(ErrorMessage = "שדה חובה")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientStatus", DbType="VarChar(7)")]
		public string PatientStatus
		{
			get
			{
				return this._PatientStatus;
			}
			set
			{
				if ((this._PatientStatus != value))
				{
					this.OnPatientStatusChanging(value);
					this.SendPropertyChanging();
					this._PatientStatus = value;
					this.SendPropertyChanged("PatientStatus");
					this.OnPatientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName1", DbType="VarChar(20)")]
		public string ContactName1
		{
			get
			{
				return this._ContactName1;
			}
			set
			{
				if ((this._ContactName1 != value))
				{
					this.OnContactName1Changing(value);
					this.SendPropertyChanging();
					this._ContactName1 = value;
					this.SendPropertyChanged("ContactName1");
					this.OnContactName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactProfession1", DbType="VarChar(20)")]
		public string ContactProfession1
		{
			get
			{
				return this._ContactProfession1;
			}
			set
			{
				if ((this._ContactProfession1 != value))
				{
					this.OnContactProfession1Changing(value);
					this.SendPropertyChanging();
					this._ContactProfession1 = value;
					this.SendPropertyChanged("ContactProfession1");
					this.OnContactProfession1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMail1", DbType="VarChar(30)")]
		public string ContactMail1
		{
			get
			{
				return this._ContactMail1;
			}
			set
			{
				if ((this._ContactMail1 != value))
				{
					this.OnContactMail1Changing(value);
					this.SendPropertyChanging();
					this._ContactMail1 = value;
					this.SendPropertyChanged("ContactMail1");
					this.OnContactMail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone1", DbType="VarChar(10)")]
		public string ContactPhone1
		{
			get
			{
				return this._ContactPhone1;
			}
			set
			{
				if ((this._ContactPhone1 != value))
				{
					this.OnContactPhone1Changing(value);
					this.SendPropertyChanging();
					this._ContactPhone1 = value;
					this.SendPropertyChanged("ContactPhone1");
					this.OnContactPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName2", DbType="VarChar(20)")]
		public string ContactName2
		{
			get
			{
				return this._ContactName2;
			}
			set
			{
				if ((this._ContactName2 != value))
				{
					this.OnContactName2Changing(value);
					this.SendPropertyChanging();
					this._ContactName2 = value;
					this.SendPropertyChanged("ContactName2");
					this.OnContactName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactProfession2", DbType="VarChar(20)")]
		public string ContactProfession2
		{
			get
			{
				return this._ContactProfession2;
			}
			set
			{
				if ((this._ContactProfession2 != value))
				{
					this.OnContactProfession2Changing(value);
					this.SendPropertyChanging();
					this._ContactProfession2 = value;
					this.SendPropertyChanged("ContactProfession2");
					this.OnContactProfession2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMail2", DbType="VarChar(30)")]
		public string ContactMail2
		{
			get
			{
				return this._ContactMail2;
			}
			set
			{
				if ((this._ContactMail2 != value))
				{
					this.OnContactMail2Changing(value);
					this.SendPropertyChanging();
					this._ContactMail2 = value;
					this.SendPropertyChanged("ContactMail2");
					this.OnContactMail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone2", DbType="VarChar(10)")]
		public string ContactPhone2
		{
			get
			{
				return this._ContactPhone2;
			}
			set
			{
				if ((this._ContactPhone2 != value))
				{
					this.OnContactPhone2Changing(value);
					this.SendPropertyChanging();
					this._ContactPhone2 = value;
					this.SendPropertyChanged("ContactPhone2");
					this.OnContactPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName3", DbType="VarChar(20)")]
		public string ContactName3
		{
			get
			{
				return this._ContactName3;
			}
			set
			{
				if ((this._ContactName3 != value))
				{
					this.OnContactName3Changing(value);
					this.SendPropertyChanging();
					this._ContactName3 = value;
					this.SendPropertyChanged("ContactName3");
					this.OnContactName3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactProfession3", DbType="VarChar(20)")]
		public string ContactProfession3
		{
			get
			{
				return this._ContactProfession3;
			}
			set
			{
				if ((this._ContactProfession3 != value))
				{
					this.OnContactProfession3Changing(value);
					this.SendPropertyChanging();
					this._ContactProfession3 = value;
					this.SendPropertyChanged("ContactProfession3");
					this.OnContactProfession3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMail3", DbType="VarChar(30)")]
		public string ContactMail3
		{
			get
			{
				return this._ContactMail3;
			}
			set
			{
				if ((this._ContactMail3 != value))
				{
					this.OnContactMail3Changing(value);
					this.SendPropertyChanging();
					this._ContactMail3 = value;
					this.SendPropertyChanged("ContactMail3");
					this.OnContactMail3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone3", DbType="VarChar(10)")]
		public string ContactPhone3
		{
			get
			{
				return this._ContactPhone3;
			}
			set
			{
				if ((this._ContactPhone3 != value))
				{
					this.OnContactPhone3Changing(value);
					this.SendPropertyChanging();
					this._ContactPhone3 = value;
					this.SendPropertyChanged("ContactPhone3");
					this.OnContactPhone3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatient_tblBrotherSisterPatient", Storage="_tblBrotherSisterPatients", ThisKey="ID", OtherKey="PatientID")]
		public EntitySet<tblBrotherSisterPatient> tblBrotherSisterPatients
		{
			get
			{
				return this._tblBrotherSisterPatients;
			}
			set
			{
				this._tblBrotherSisterPatients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatient_tblParentPatient", Storage="_tblParentPatients", ThisKey="ID", OtherKey="PatientID")]
		public EntitySet<tblParentPatient> tblParentPatients
		{
			get
			{
				return this._tblParentPatients;
			}
			set
			{
				this._tblParentPatients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatient_tblRefererencePatient", Storage="_tblRefererencePatients", ThisKey="ID", OtherKey="PatientID")]
		public EntitySet<tblRefererencePatient> tblRefererencePatients
		{
			get
			{
				return this._tblRefererencePatients;
			}
			set
			{
				this._tblRefererencePatients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBrotherSisterPatients(tblBrotherSisterPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblPatient = this;
		}
		
		private void detach_tblBrotherSisterPatients(tblBrotherSisterPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblPatient = null;
		}
		
		private void attach_tblParentPatients(tblParentPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblPatient = this;
		}
		
		private void detach_tblParentPatients(tblParentPatient entity)
		{
			this.SendPropertyChanging();
			entity.tblPatient = null;
		}
		
		private void attach_tblRefererencePatients(tblRefererencePatient entity)
		{
			this.SendPropertyChanging();
			entity.tblPatient = this;
		}
		
		private void detach_tblRefererencePatients(tblRefererencePatient entity)
		{
			this.SendPropertyChanging();
			entity.tblPatient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblReference")]
	public partial class tblReference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReferenceNumber;
		
		private string _ReasonReference;
		
		private string _StatusReference;
		
		private string _OtherStatus;
		
		private string _AbuseType;
		
		private string _ReferenceSource;
		
		private string _OtherReference;
		
		private System.Nullable<System.DateTime> _StartDateReference;
		
		private System.Nullable<System.DateTime> _EndDateReference;
		
		private EntitySet<tblReferenceTherapist> _tblReferenceTherapists;
		
		private EntitySet<tblRefererencePatient> _tblRefererencePatients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferenceNumberChanging(int value);
    partial void OnReferenceNumberChanged();
    partial void OnReasonReferenceChanging(string value);
    partial void OnReasonReferenceChanged();
    partial void OnStatusReferenceChanging(string value);
    partial void OnStatusReferenceChanged();
    partial void OnOtherStatusChanging(string value);
    partial void OnOtherStatusChanged();
    partial void OnAbuseTypeChanging(string value);
    partial void OnAbuseTypeChanged();
    partial void OnReferenceSourceChanging(string value);
    partial void OnReferenceSourceChanged();
    partial void OnOtherReferenceChanging(string value);
    partial void OnOtherReferenceChanged();
    partial void OnStartDateReferenceChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateReferenceChanged();
    partial void OnEndDateReferenceChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateReferenceChanged();
    #endregion
		
		public tblReference()
		{
			this._tblReferenceTherapists = new EntitySet<tblReferenceTherapist>(new Action<tblReferenceTherapist>(this.attach_tblReferenceTherapists), new Action<tblReferenceTherapist>(this.detach_tblReferenceTherapists));
			this._tblRefererencePatients = new EntitySet<tblRefererencePatient>(new Action<tblRefererencePatient>(this.attach_tblRefererencePatients), new Action<tblRefererencePatient>(this.detach_tblRefererencePatients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReferenceNumber
		{
			get
			{
				return this._ReferenceNumber;
			}
			set
			{
				if ((this._ReferenceNumber != value))
				{
					this.OnReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._ReferenceNumber = value;
					this.SendPropertyChanged("ReferenceNumber");
					this.OnReferenceNumberChanged();
				}
			}
		}


        [Required(ErrorMessage = "שדה חובה")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonReference", DbType="VarChar(MAX)")]
		public string ReasonReference
		{
			get
			{
				return this._ReasonReference;
			}
			set
			{
				if ((this._ReasonReference != value))
				{
					this.OnReasonReferenceChanging(value);
					this.SendPropertyChanging();
					this._ReasonReference = value;
					this.SendPropertyChanged("ReasonReference");
					this.OnReasonReferenceChanged();
				}
			}
		}


        [Required(ErrorMessage = "שדה חובה")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusReference", DbType="VarChar(20)")]
		public string StatusReference
		{
			get
			{
				return this._StatusReference;
			}
			set
			{
				if ((this._StatusReference != value))
				{
					this.OnStatusReferenceChanging(value);
					this.SendPropertyChanging();
					this._StatusReference = value;
					this.SendPropertyChanged("StatusReference");
					this.OnStatusReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherStatus", DbType="VarChar(MAX)")]
		public string OtherStatus
		{
			get
			{
				return this._OtherStatus;
			}
			set
			{
				if ((this._OtherStatus != value))
				{
					this.OnOtherStatusChanging(value);
					this.SendPropertyChanging();
					this._OtherStatus = value;
					this.SendPropertyChanged("OtherStatus");
					this.OnOtherStatusChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbuseType", DbType="VarChar(20)")]
		public string AbuseType
		{
			get
			{
				return this._AbuseType;
			}
			set
			{
				if ((this._AbuseType != value))
				{
					this.OnAbuseTypeChanging(value);
					this.SendPropertyChanging();
					this._AbuseType = value;
					this.SendPropertyChanged("AbuseType");
					this.OnAbuseTypeChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceSource", DbType="VarChar(20)")]
		public string ReferenceSource
		{
			get
			{
				return this._ReferenceSource;
			}
			set
			{
				if ((this._ReferenceSource != value))
				{
					this.OnReferenceSourceChanging(value);
					this.SendPropertyChanging();
					this._ReferenceSource = value;
					this.SendPropertyChanged("ReferenceSource");
					this.OnReferenceSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherReference", DbType="VarChar(MAX)")]
		public string OtherReference
		{
			get
			{
				return this._OtherReference;
			}
			set
			{
				if ((this._OtherReference != value))
				{
					this.OnOtherReferenceChanging(value);
					this.SendPropertyChanging();
					this._OtherReference = value;
					this.SendPropertyChanged("OtherReference");
					this.OnOtherReferenceChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateReference", DbType="Date")]
		public System.Nullable<System.DateTime> StartDateReference
		{
			get
			{
				return this._StartDateReference;
			}
			set
			{
				if ((this._StartDateReference != value))
				{
					this.OnStartDateReferenceChanging(value);
					this.SendPropertyChanging();
					this._StartDateReference = value;
					this.SendPropertyChanged("StartDateReference");
					this.OnStartDateReferenceChanged();
				}
			}
		}
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateReference", DbType="Date")]
		public System.Nullable<System.DateTime> EndDateReference
		{
			get
			{
				return this._EndDateReference;
			}
			set
			{
				if ((this._EndDateReference != value))
				{
					this.OnEndDateReferenceChanging(value);
					this.SendPropertyChanging();
					this._EndDateReference = value;
					this.SendPropertyChanged("EndDateReference");
					this.OnEndDateReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReference_tblReferenceTherapist", Storage="_tblReferenceTherapists", ThisKey="ReferenceNumber", OtherKey="ReferenceNumber")]
		public EntitySet<tblReferenceTherapist> tblReferenceTherapists
		{
			get
			{
				return this._tblReferenceTherapists;
			}
			set
			{
				this._tblReferenceTherapists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReference_tblRefererencePatient", Storage="_tblRefererencePatients", ThisKey="ReferenceNumber", OtherKey="ReferenceNumber")]
		public EntitySet<tblRefererencePatient> tblRefererencePatients
		{
			get
			{
				return this._tblRefererencePatients;
			}
			set
			{
				this._tblRefererencePatients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblReferenceTherapists(tblReferenceTherapist entity)
		{
			this.SendPropertyChanging();
			entity.tblReference = this;
		}
		
		private void detach_tblReferenceTherapists(tblReferenceTherapist entity)
		{
			this.SendPropertyChanging();
			entity.tblReference = null;
		}
		
		private void attach_tblRefererencePatients(tblRefererencePatient entity)
		{
			this.SendPropertyChanging();
			entity.tblReference = this;
		}
		
		private void detach_tblRefererencePatients(tblRefererencePatient entity)
		{
			this.SendPropertyChanging();
			entity.tblReference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblReferenceTherapist")]
	public partial class tblReferenceTherapist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReferenceNumber;
		
		private string _TherapistID;
		
		private EntitySet<tblTreatment> _tblTreatments;
		
		private EntityRef<tblReference> _tblReference;
		
		private EntityRef<tblTherapist> _tblTherapist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferenceNumberChanging(int value);
    partial void OnReferenceNumberChanged();
    partial void OnTherapistIDChanging(string value);
    partial void OnTherapistIDChanged();
    #endregion
		
		public tblReferenceTherapist()
		{
			this._tblTreatments = new EntitySet<tblTreatment>(new Action<tblTreatment>(this.attach_tblTreatments), new Action<tblTreatment>(this.detach_tblTreatments));
			this._tblReference = default(EntityRef<tblReference>);
			this._tblTherapist = default(EntityRef<tblTherapist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReferenceNumber
		{
			get
			{
				return this._ReferenceNumber;
			}
			set
			{
				if ((this._ReferenceNumber != value))
				{
					if (this._tblReference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._ReferenceNumber = value;
					this.SendPropertyChanged("ReferenceNumber");
					this.OnReferenceNumberChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TherapistID
		{
			get
			{
				return this._TherapistID;
			}
			set
			{
				if ((this._TherapistID != value))
				{
					if (this._tblTherapist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTherapistIDChanging(value);
					this.SendPropertyChanging();
					this._TherapistID = value;
					this.SendPropertyChanged("TherapistID");
					this.OnTherapistIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReferenceTherapist_tblTreatment", Storage="_tblTreatments", ThisKey="ReferenceNumber,TherapistID", OtherKey="ReferenceNumber,TherapistID")]
		public EntitySet<tblTreatment> tblTreatments
		{
			get
			{
				return this._tblTreatments;
			}
			set
			{
				this._tblTreatments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReference_tblReferenceTherapist", Storage="_tblReference", ThisKey="ReferenceNumber", OtherKey="ReferenceNumber", IsForeignKey=true)]
		public tblReference tblReference
		{
			get
			{
				return this._tblReference.Entity;
			}
			set
			{
				tblReference previousValue = this._tblReference.Entity;
				if (((previousValue != value) 
							|| (this._tblReference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblReference.Entity = null;
						previousValue.tblReferenceTherapists.Remove(this);
					}
					this._tblReference.Entity = value;
					if ((value != null))
					{
						value.tblReferenceTherapists.Add(this);
						this._ReferenceNumber = value.ReferenceNumber;
					}
					else
					{
						this._ReferenceNumber = default(int);
					}
					this.SendPropertyChanged("tblReference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTherapist_tblReferenceTherapist", Storage="_tblTherapist", ThisKey="TherapistID", OtherKey="TherapistID", IsForeignKey=true)]
		public tblTherapist tblTherapist
		{
			get
			{
				return this._tblTherapist.Entity;
			}
			set
			{
				tblTherapist previousValue = this._tblTherapist.Entity;
				if (((previousValue != value) 
							|| (this._tblTherapist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTherapist.Entity = null;
						previousValue.tblReferenceTherapists.Remove(this);
					}
					this._tblTherapist.Entity = value;
					if ((value != null))
					{
						value.tblReferenceTherapists.Add(this);
						this._TherapistID = value.TherapistID;
					}
					else
					{
						this._TherapistID = default(string);
					}
					this.SendPropertyChanged("tblTherapist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTreatments(tblTreatment entity)
		{
			this.SendPropertyChanging();
			entity.tblReferenceTherapist = this;
		}
		
		private void detach_tblTreatments(tblTreatment entity)
		{
			this.SendPropertyChanging();
			entity.tblReferenceTherapist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRefererencePatient")]
	public partial class tblRefererencePatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PatientID;
		
		private int _ReferenceNumber;
		
		private EntityRef<tblPatient> _tblPatient;
		
		private EntityRef<tblReference> _tblReference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(string value);
    partial void OnPatientIDChanged();
    partial void OnReferenceNumberChanging(int value);
    partial void OnReferenceNumberChanged();
    #endregion
		
		public tblRefererencePatient()
		{
			this._tblPatient = default(EntityRef<tblPatient>);
			this._tblReference = default(EntityRef<tblReference>);
			OnCreated();
		}

        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._tblPatient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReferenceNumber
		{
			get
			{
				return this._ReferenceNumber;
			}
			set
			{
				if ((this._ReferenceNumber != value))
				{
					if (this._tblReference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._ReferenceNumber = value;
					this.SendPropertyChanged("ReferenceNumber");
					this.OnReferenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatient_tblRefererencePatient", Storage="_tblPatient", ThisKey="PatientID", OtherKey="ID", IsForeignKey=true)]
		public tblPatient tblPatient
		{
			get
			{
				return this._tblPatient.Entity;
			}
			set
			{
				tblPatient previousValue = this._tblPatient.Entity;
				if (((previousValue != value) 
							|| (this._tblPatient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPatient.Entity = null;
						previousValue.tblRefererencePatients.Remove(this);
					}
					this._tblPatient.Entity = value;
					if ((value != null))
					{
						value.tblRefererencePatients.Add(this);
						this._PatientID = value.ID;
					}
					else
					{
						this._PatientID = default(string);
					}
					this.SendPropertyChanged("tblPatient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReference_tblRefererencePatient", Storage="_tblReference", ThisKey="ReferenceNumber", OtherKey="ReferenceNumber", IsForeignKey=true)]
		public tblReference tblReference
		{
			get
			{
				return this._tblReference.Entity;
			}
			set
			{
				tblReference previousValue = this._tblReference.Entity;
				if (((previousValue != value) 
							|| (this._tblReference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblReference.Entity = null;
						previousValue.tblRefererencePatients.Remove(this);
					}
					this._tblReference.Entity = value;
					if ((value != null))
					{
						value.tblRefererencePatients.Add(this);
						this._ReferenceNumber = value.ReferenceNumber;
					}
					else
					{
						this._ReferenceNumber = default(int);
					}
					this.SendPropertyChanged("tblReference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTherapist")]
	public partial class tblTherapist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TherapistID;
		
		private string _TherapistFirstName;
		
		private string _TherapistSurName;
		
		private System.Nullable<System.DateTime> _TherapistBirthDate;
		
		private string _TherapistGender;
		
		private string _TherapistAddress;
		
		private string _TherapistPhoneNumber;
		
		private string _TherapistMail;
		
		private string _UserName;
		
		private string _Passcode;
		
		private string _PasscodeConfirm;
		
		private EntitySet<tblReferenceTherapist> _tblReferenceTherapists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTherapistIDChanging(string value);
    partial void OnTherapistIDChanged();
    partial void OnTherapistFirstNameChanging(string value);
    partial void OnTherapistFirstNameChanged();
    partial void OnTherapistSurNameChanging(string value);
    partial void OnTherapistSurNameChanged();
    partial void OnTherapistBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTherapistBirthDateChanged();
    partial void OnTherapistGenderChanging(string value);
    partial void OnTherapistGenderChanged();
    partial void OnTherapistAddressChanging(string value);
    partial void OnTherapistAddressChanged();
    partial void OnTherapistPhoneNumberChanging(string value);
    partial void OnTherapistPhoneNumberChanged();
    partial void OnTherapistMailChanging(string value);
    partial void OnTherapistMailChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasscodeChanging(string value);
    partial void OnPasscodeChanged();
    partial void OnPasscodeConfirmChanging(string value);
    partial void OnPasscodeConfirmChanged();
    #endregion
		
		public tblTherapist()
		{
			this._tblReferenceTherapists = new EntitySet<tblReferenceTherapist>(new Action<tblReferenceTherapist>(this.attach_tblReferenceTherapists), new Action<tblReferenceTherapist>(this.detach_tblReferenceTherapists));
			OnCreated();
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^[0-9]{0,15}$", ErrorMessage = "תעודת זהות חייב להכיל רק ספרות")]
        [StringLength(9, ErrorMessage = "מספר תעודת זהות חייב להכיל 9 ספרות", MinimumLength = 9)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistID", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TherapistID
		{
			get
			{
				return this._TherapistID;
			}
			set
			{
				if ((this._TherapistID != value))
				{
					this.OnTherapistIDChanging(value);
					this.SendPropertyChanging();
					this._TherapistID = value;
					this.SendPropertyChanged("TherapistID");
					this.OnTherapistIDChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  פרטי אינו יכול להכיל מספרים")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistFirstName", DbType="VarChar(20)")]
		public string TherapistFirstName
		{
			get
			{
				return this._TherapistFirstName;
			}
			set
			{
				if ((this._TherapistFirstName != value))
				{
					this.OnTherapistFirstNameChanging(value);
					this.SendPropertyChanging();
					this._TherapistFirstName = value;
					this.SendPropertyChanged("TherapistFirstName");
					this.OnTherapistFirstNameChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"[^0-9]{0,15}$", ErrorMessage = "שם  משפחה אינו יכול להכיל מספרים")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistSurName", DbType="VarChar(20)")]
		public string TherapistSurName
		{
			get
			{
				return this._TherapistSurName;
			}
			set
			{
				if ((this._TherapistSurName != value))
				{
					this.OnTherapistSurNameChanging(value);
					this.SendPropertyChanging();
					this._TherapistSurName = value;
					this.SendPropertyChanged("TherapistSurName");
					this.OnTherapistSurNameChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]


		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistBirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> TherapistBirthDate
		{
			get
			{
				return this._TherapistBirthDate;
			}
			set
			{
				if ((this._TherapistBirthDate != value))
				{
					this.OnTherapistBirthDateChanging(value);
					this.SendPropertyChanging();
					this._TherapistBirthDate = value;
					this.SendPropertyChanged("TherapistBirthDate");
					this.OnTherapistBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistGender", DbType="VarChar(6)")]
		public string TherapistGender
		{
			get
			{
				return this._TherapistGender;
			}
			set
			{
				if ((this._TherapistGender != value))
				{
					this.OnTherapistGenderChanging(value);
					this.SendPropertyChanging();
					this._TherapistGender = value;
					this.SendPropertyChanged("TherapistGender");
					this.OnTherapistGenderChanged();
				}
			}
		}

        [Required(ErrorMessage = "שדה חובה")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistAddress", DbType="VarChar(MAX)")]
		public string TherapistAddress
		{
			get
			{
				return this._TherapistAddress;
			}
			set
			{
				if ((this._TherapistAddress != value))
				{
					this.OnTherapistAddressChanging(value);
					this.SendPropertyChanging();
					this._TherapistAddress = value;
					this.SendPropertyChanged("TherapistAddress");
					this.OnTherapistAddressChanged();
				}
			}
		}

        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(@"^0[0-9]{0,15}$", ErrorMessage = "טלפון לא חוקי")]

        [StringLength(10, ErrorMessage = "מספר פלא חייב להכיל 10 ספרות", MinimumLength = 10)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistPhoneNumber", DbType="Char(10)")]
		public string TherapistPhoneNumber
		{
			get
			{
				return this._TherapistPhoneNumber;
			}
			set
			{
				if ((this._TherapistPhoneNumber != value))
				{
					this.OnTherapistPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._TherapistPhoneNumber = value;
					this.SendPropertyChanged("TherapistPhoneNumber");
					this.OnTherapistPhoneNumberChanged();
				}
			}
		}
        [Required(ErrorMessage = "שדה חובה")]
        [RegularExpression(".+@gmail.com", ErrorMessage = "  אנא הכנס מייל gmail")]
                
	

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistMail", DbType="VarChar(30)")]
		public string TherapistMail
		{
			get
			{
				return this._TherapistMail;
			}
			set
			{
				if ((this._TherapistMail != value))
				{
					this.OnTherapistMailChanging(value);
					this.SendPropertyChanging();
					this._TherapistMail = value;
					this.SendPropertyChanged("TherapistMail");
					this.OnTherapistMailChanged();
				}
			}
		}
                        [Required(ErrorMessage = "שדה חובה")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
                        [Required(ErrorMessage = "שדה חובה")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passcode", DbType="VarChar(20)")]
		public string Passcode
		{
			get
			{
				return this._Passcode;
			}
			set
			{
				if ((this._Passcode != value))
				{
					this.OnPasscodeChanging(value);
					this.SendPropertyChanging();
					this._Passcode = value;
					this.SendPropertyChanged("Passcode");
					this.OnPasscodeChanged();
				}
			}
		}
                        [Required(ErrorMessage = "שדה חובה")]

                        [Compare("Passcode", ErrorMessage = "סיסמא אינה תואמת לאימות סיסמא")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasscodeConfirm", DbType="VarChar(20)")]
		public string PasscodeConfirm
		{
			get
			{
				return this._PasscodeConfirm;
			}
			set
			{
				if ((this._PasscodeConfirm != value))
				{
					this.OnPasscodeConfirmChanging(value);
					this.SendPropertyChanging();
					this._PasscodeConfirm = value;
					this.SendPropertyChanged("PasscodeConfirm");
					this.OnPasscodeConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTherapist_tblReferenceTherapist", Storage="_tblReferenceTherapists", ThisKey="TherapistID", OtherKey="TherapistID")]
		public EntitySet<tblReferenceTherapist> tblReferenceTherapists
		{
			get
			{
				return this._tblReferenceTherapists;
			}
			set
			{
				this._tblReferenceTherapists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblReferenceTherapists(tblReferenceTherapist entity)
		{
			this.SendPropertyChanging();
			entity.tblTherapist = this;
		}
		
		private void detach_tblReferenceTherapists(tblReferenceTherapist entity)
		{
			this.SendPropertyChanging();
			entity.tblTherapist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTreatment")]
	public partial class tblTreatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TreatmentNumber;
		
		private string _TreatmentGoal;
		
		private string _TreatmentSubject;
		
		private string _TreatmentStatusPatient;
		
		private string _TreatmentDescription;
		
		private string _TreatmentSummary;
		
		private string _NextTreatment;
		
		private System.Nullable<System.DateTime> _TreatmentDate;
		
		private System.Nullable<System.TimeSpan> _TreatmentStartTime;
		
		private string _TreatmentPlace;
		
		private string _IsPaid;
		
		private System.Nullable<double> _Cost;
		
		private string _IsArrived;
		
		private System.Nullable<int> _FinancingFactorNumber;
		
		private System.Nullable<int> _ReferenceNumber;
		
		private string _TherapistID;
		
		private EntityRef<tblFinancingFactor> _tblFinancingFactor;
		
		private EntityRef<tblReferenceTherapist> _tblReferenceTherapist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTreatmentNumberChanging(int value);
    partial void OnTreatmentNumberChanged();
    partial void OnTreatmentGoalChanging(string value);
    partial void OnTreatmentGoalChanged();
    partial void OnTreatmentSubjectChanging(string value);
    partial void OnTreatmentSubjectChanged();
    partial void OnTreatmentStatusPatientChanging(string value);
    partial void OnTreatmentStatusPatientChanged();
    partial void OnTreatmentDescriptionChanging(string value);
    partial void OnTreatmentDescriptionChanged();
    partial void OnTreatmentSummaryChanging(string value);
    partial void OnTreatmentSummaryChanged();
    partial void OnNextTreatmentChanging(string value);
    partial void OnNextTreatmentChanged();
    partial void OnTreatmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTreatmentDateChanged();
    partial void OnTreatmentStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTreatmentStartTimeChanged();
    partial void OnTreatmentPlaceChanging(string value);
    partial void OnTreatmentPlaceChanged();
    partial void OnIsPaidChanging(string value);
    partial void OnIsPaidChanged();
    partial void OnCostChanging(System.Nullable<double> value);
    partial void OnCostChanged();
    partial void OnIsArrivedChanging(string value);
    partial void OnIsArrivedChanged();
    partial void OnFinancingFactorNumberChanging(System.Nullable<int> value);
    partial void OnFinancingFactorNumberChanged();
    partial void OnReferenceNumberChanging(System.Nullable<int> value);
    partial void OnReferenceNumberChanged();
    partial void OnTherapistIDChanging(string value);
    partial void OnTherapistIDChanged();
    #endregion
		
		public tblTreatment()
		{
			this._tblFinancingFactor = default(EntityRef<tblFinancingFactor>);
			this._tblReferenceTherapist = default(EntityRef<tblReferenceTherapist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TreatmentNumber
		{
			get
			{
				return this._TreatmentNumber;
			}
			set
			{
				if ((this._TreatmentNumber != value))
				{
					this.OnTreatmentNumberChanging(value);
					this.SendPropertyChanging();
					this._TreatmentNumber = value;
					this.SendPropertyChanged("TreatmentNumber");
					this.OnTreatmentNumberChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentGoal", DbType="VarChar(MAX)")]
		public string TreatmentGoal
		{
			get
			{
				return this._TreatmentGoal;
			}
			set
			{
				if ((this._TreatmentGoal != value))
				{
					this.OnTreatmentGoalChanging(value);
					this.SendPropertyChanging();
					this._TreatmentGoal = value;
					this.SendPropertyChanged("TreatmentGoal");
					this.OnTreatmentGoalChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentSubject", DbType="VarChar(MAX)")]
		public string TreatmentSubject
		{
			get
			{
				return this._TreatmentSubject;
			}
			set
			{
				if ((this._TreatmentSubject != value))
				{
					this.OnTreatmentSubjectChanging(value);
					this.SendPropertyChanging();
					this._TreatmentSubject = value;
					this.SendPropertyChanged("TreatmentSubject");
					this.OnTreatmentSubjectChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentStatusPatient", DbType="VarChar(MAX)")]
		public string TreatmentStatusPatient
		{
			get
			{
				return this._TreatmentStatusPatient;
			}
			set
			{
				if ((this._TreatmentStatusPatient != value))
				{
					this.OnTreatmentStatusPatientChanging(value);
					this.SendPropertyChanging();
					this._TreatmentStatusPatient = value;
					this.SendPropertyChanged("TreatmentStatusPatient");
					this.OnTreatmentStatusPatientChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TreatmentDescription
		{
			get
			{
				return this._TreatmentDescription;
			}
			set
			{
				if ((this._TreatmentDescription != value))
				{
					this.OnTreatmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TreatmentDescription = value;
					this.SendPropertyChanged("TreatmentDescription");
					this.OnTreatmentDescriptionChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentSummary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TreatmentSummary
		{
			get
			{
				return this._TreatmentSummary;
			}
			set
			{
				if ((this._TreatmentSummary != value))
				{
					this.OnTreatmentSummaryChanging(value);
					this.SendPropertyChanging();
					this._TreatmentSummary = value;
					this.SendPropertyChanged("TreatmentSummary");
					this.OnTreatmentSummaryChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTreatment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NextTreatment
		{
			get
			{
				return this._NextTreatment;
			}
			set
			{
				if ((this._NextTreatment != value))
				{
					this.OnNextTreatmentChanging(value);
					this.SendPropertyChanging();
					this._NextTreatment = value;
					this.SendPropertyChanged("NextTreatment");
					this.OnNextTreatmentChanged();
				}
			}
		}

                        [Required(ErrorMessage = "שדה חובה")]

                        [DataType(DataType.Date)]
                        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> TreatmentDate
		{
			get
			{
				return this._TreatmentDate;
			}
			set
			{
				if ((this._TreatmentDate != value))
				{
					this.OnTreatmentDateChanging(value);
					this.SendPropertyChanging();
					this._TreatmentDate = value;
					this.SendPropertyChanged("TreatmentDate");
					this.OnTreatmentDateChanged();
				}
			}
		}
                        [Required(ErrorMessage = "שדה חובה")]
                        [DataType(DataType.Time)]
                        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentStartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> TreatmentStartTime
		{
			get
			{
				return this._TreatmentStartTime;
			}
			set
			{
				if ((this._TreatmentStartTime != value))
				{
					this.OnTreatmentStartTimeChanging(value);
					this.SendPropertyChanging();
					this._TreatmentStartTime = value;
					this.SendPropertyChanged("TreatmentStartTime");
					this.OnTreatmentStartTimeChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentPlace", DbType="VarChar(MAX)")]
		public string TreatmentPlace
		{
			get
			{
				return this._TreatmentPlace;
			}
			set
			{
				if ((this._TreatmentPlace != value))
				{
					this.OnTreatmentPlaceChanging(value);
					this.SendPropertyChanging();
					this._TreatmentPlace = value;
					this.SendPropertyChanged("TreatmentPlace");
					this.OnTreatmentPlaceChanged();
				}
			}
		}
                        [Required(ErrorMessage = "שדה חובה")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="VarChar(2)")]
		public string IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}

                                [Required(ErrorMessage = "שדה חובה")]

                        [RegularExpression(@"[0-9]{0,15}$", ErrorMessage = "מחיר חייב להכיל רק מספרים")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArrived", DbType="VarChar(2)")]
		public string IsArrived
		{
			get
			{
				return this._IsArrived;
			}
			set
			{
				if ((this._IsArrived != value))
				{
					this.OnIsArrivedChanging(value);
					this.SendPropertyChanging();
					this._IsArrived = value;
					this.SendPropertyChanged("IsArrived");
					this.OnIsArrivedChanged();
				}
			}
		}

                                [Required(ErrorMessage = "שדה חובה")]

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingFactorNumber", DbType="Int")]
		public System.Nullable<int> FinancingFactorNumber
		{
			get
			{
				return this._FinancingFactorNumber;
			}
			set
			{
				if ((this._FinancingFactorNumber != value))
				{
					if (this._tblFinancingFactor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancingFactorNumberChanging(value);
					this.SendPropertyChanging();
					this._FinancingFactorNumber = value;
					this.SendPropertyChanged("FinancingFactorNumber");
					this.OnFinancingFactorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceNumber", DbType="Int")]
		public System.Nullable<int> ReferenceNumber
		{
			get
			{
				return this._ReferenceNumber;
			}
			set
			{
				if ((this._ReferenceNumber != value))
				{
					if (this._tblReferenceTherapist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._ReferenceNumber = value;
					this.SendPropertyChanged("ReferenceNumber");
					this.OnReferenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapistID", DbType="Char(9)")]
		public string TherapistID
		{
			get
			{
				return this._TherapistID;
			}
			set
			{
				if ((this._TherapistID != value))
				{
					if (this._tblReferenceTherapist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTherapistIDChanging(value);
					this.SendPropertyChanging();
					this._TherapistID = value;
					this.SendPropertyChanged("TherapistID");
					this.OnTherapistIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFinancingFactor_tblTreatment", Storage="_tblFinancingFactor", ThisKey="FinancingFactorNumber", OtherKey="FinancingFactorNumber", IsForeignKey=true)]
		public tblFinancingFactor tblFinancingFactor
		{
			get
			{
				return this._tblFinancingFactor.Entity;
			}
			set
			{
				tblFinancingFactor previousValue = this._tblFinancingFactor.Entity;
				if (((previousValue != value) 
							|| (this._tblFinancingFactor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblFinancingFactor.Entity = null;
						previousValue.tblTreatments.Remove(this);
					}
					this._tblFinancingFactor.Entity = value;
					if ((value != null))
					{
						value.tblTreatments.Add(this);
						this._FinancingFactorNumber = value.FinancingFactorNumber;
					}
					else
					{
						this._FinancingFactorNumber = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblFinancingFactor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReferenceTherapist_tblTreatment", Storage="_tblReferenceTherapist", ThisKey="ReferenceNumber,TherapistID", OtherKey="ReferenceNumber,TherapistID", IsForeignKey=true)]
		public tblReferenceTherapist tblReferenceTherapist
		{
			get
			{
				return this._tblReferenceTherapist.Entity;
			}
			set
			{
				tblReferenceTherapist previousValue = this._tblReferenceTherapist.Entity;
				if (((previousValue != value) 
							|| (this._tblReferenceTherapist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblReferenceTherapist.Entity = null;
						previousValue.tblTreatments.Remove(this);
					}
					this._tblReferenceTherapist.Entity = value;
					if ((value != null))
					{
						value.tblTreatments.Add(this);
						this._ReferenceNumber = value.ReferenceNumber;
						this._TherapistID = value.TherapistID;
					}
					else
					{
						this._ReferenceNumber = default(Nullable<int>);
						this._TherapistID = default(string);
					}
					this.SendPropertyChanged("tblReferenceTherapist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
